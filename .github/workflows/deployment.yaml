name: Deploy to Google App Engine
on:
  push:
    branches:
      - main
jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#      - name: update application properties
#        run : |
#          touch backend/src/main/resources/application.properties
#          echo "spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration" > backend/src/main/resources/application.properties
#          echo "spring.data.mongodb.uri=${{ secrets.MONGODB_URI }}" >> backend/src/main/resources/application.properties
#          echo "spring.data.mongodb.database=${{ secrets.MONGODB_DATABASE }}" >> backend/src/main/resources/application.properties
#          cat backend/src/main/resources/application.properties

      - name: Update application properties
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES_CONTENT }}" > backend/src/main/resources/application.properties
          cat backend/src/main/resources/application.properties

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Google Cloud CLI
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Build with Maven
        run: |
          echo "Starting Maven build process..."
          cd backend
          echo "switch to backend"
          mvn clean package -DskipTests
          echo "Maven build process completed."


      - name: Find JAR File
        id: findjar
        run: |
          echo "Searching for the JAR file..."
          JAR_FILE=$(ls backend/target/*.jar)
          echo "JAR_FILE<<EOF" >> $GITHUB_ENV
          echo "$JAR_FILE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "JAR file found: $JAR_FILE"

      - name: Deploy to Google App Engine
        uses: google-github-actions/deploy-appengine@v2.1.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          promote: true
          deliverables: ${{ env.JAR_FILE }}


#      - name: Find JAR File
#        id: findjar
#        run: |
#          echo "Searching for the JAR file..."
#          JAR_FILE=$(ls backend/target/*.jar)
#          echo "::set-output name=JAR_FILE::$JAR_FILE"
#          echo "JAR file found: $JAR_FILE"
#
#      - name: Deploy to Google App Engine
#        uses: google-github-actions/deploy-appengine@v2.1.0
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          promote: true
#          deliverables: backend/target/${{ steps.findjar.outputs.JAR_FILE }}

#  deploy-frontend:
##    needs: deploy-backend
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#
#      - name: Install dependencies
#        run: |
#          cd frontend && npm install
#
#      - name: Build
#        run: |
#          cd frontend && npm run build
#
#      - name: Deploy to Google App Engine
#        uses: google-github-actions/deploy-appengine@v2.1.0
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          promote: true
#          version: 'v1'
#          deliverables: frontend/app.yaml



